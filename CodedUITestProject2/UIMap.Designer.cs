// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject2
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinPane uIHomePagemojaaplikacjPane = this.UIHomePagemojaaplikacjWindow.UIHomePagemojaaplikacjPane;
            WinPane uIListakategoriimojaapPane = this.UIHomePagemojaaplikacjWindow.UIListakategoriimojaapPane;
            WinPane uICreatemojaaplikacjapPane = this.UIHomePagemojaaplikacjWindow.UICreatemojaaplikacjapPane;
            WinControl uIChromeLegacyWindowDocument = this.UIHomePagemojaaplikacjWindow.UIChromeLegacyWindowWindow.UIChromeLegacyWindowDocument;
            WinMenu uIAutouzupełnianieMenu = this.UIItemWindow.UIItemClient.UIAutouzupełnianieMenu;
            WinControl uICreatemojaaplikacjapDocument = this.UIHomePagemojaaplikacjWindow.UIChromeLegacyWindowWindow.UICreatemojaaplikacjapDocument;
            #endregion

            // Click 'Home Page — moja aplikacja platformy ASP.NET - Goo...' pane
            Mouse.Click(uIHomePagemojaaplikacjPane, new Point(786, 118));

            // Click 'Lista kategorii — moja aplikacja platformy ASP.NET...' pane
            Mouse.Click(uIListakategoriimojaapPane, new Point(417, 215));

            // Click 'Create — moja aplikacja platformy ASP.NET - Google...' pane
            Mouse.Click(uICreatemojaaplikacjapPane, new Point(663, 279));

            // Type 'n' in 'Chrome Legacy Window' document
            Keyboard.SendKeys(uIChromeLegacyWindowDocument, this.RecordedMethod1Params.UIChromeLegacyWindowDocumentSendKeys, ModifierKeys.None);

            // Type 'owa{Space}kategoria{Space}1' in 'Autouzupełnianie' popup menu
            Keyboard.SendKeys(uIAutouzupełnianieMenu, this.RecordedMethod1Params.UIAutouzupełnianieMenuSendKeys, ModifierKeys.None);

            // Type '2' in 'Create — moja aplikacja platformy ASP.NET - Google...' document
            Keyboard.SendKeys(uICreatemojaaplikacjapDocument, this.RecordedMethod1Params.UICreatemojaaplikacjapDocumentSendKeys, ModifierKeys.None);

            // Click 'Create — moja aplikacja platformy ASP.NET - Google...' pane
            Mouse.Click(uICreatemojaaplikacjapPane, new Point(621, 346));
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            HtmlCell uINowakategoria12Cell = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIItemTable.UINowakategoria12Cell;
            #endregion

            // Verify that the 'InnerText' property of 'nowa kategoria 12' cell equals 'nowa kategoria 12 '
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UINowakategoria12CellInnerText, uINowakategoria12Cell.InnerText);
        }
        
        /// <summary>
        /// RecordedMethod2 - Use 'RecordedMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            HtmlHyperlink uIKategorieHyperlink = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIKategorieHyperlink;
            HtmlHyperlink uICreateNewHyperlink = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UICreateNewHyperlink;
            HtmlEdit uINameEdit = this.UIListakategoriimojaapWindow.UICreatemojaaplikacjapDocument.UINameEdit;
            HtmlInputButton uICreateButton = this.UIListakategoriimojaapWindow.UICreatemojaaplikacjapDocument.UICreateButton;
            #endregion

            // Click 'Kategorie' link
            Mouse.Click(uIKategorieHyperlink, new Point(40, 23));

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(51, 7));

            // Type 'nowa kategoria' in 'Name' text box
            uINameEdit.Text = this.RecordedMethod2Params.UINameEditText;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(26, 11));
        }
        
        /// <summary>
        /// AssertMethod2 - Use 'AssertMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            HtmlCell uINowakategoriaCell = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIItemTable1.UINowakategoriaCell;
            #endregion

            // Verify that the 'InnerText' property of 'nowa kategoria' cell equals 'nowa kategoria '
            Assert.AreEqual(this.AssertMethod2ExpectedValues.UINowakategoriaCellInnerText, uINowakategoriaCell.InnerText);
        }
        
        /// <summary>
        /// editCategory - Use 'editCategoryParams' to pass parameters into this method.
        /// </summary>
        public void editCategory()
        {
            #region Variable Declarations
            HtmlHyperlink uIKategorieHyperlink = this.UIListakategoriimojaapWindow.UIHomePagemojaaplikacjDocument.UIKategorieHyperlink;
            HtmlHyperlink uIEditHyperlink = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIEditHyperlink;
            HtmlEdit uINameEdit = this.UIListakategoriimojaapWindow.UIEditmojaaplikacjaplaDocument.UINameEdit;
            HtmlInputButton uISaveButton = this.UIListakategoriimojaapWindow.UIEditmojaaplikacjaplaDocument.UISaveButton;
            #endregion

            // Click 'Kategorie' link
            Mouse.Click(uIKategorieHyperlink, new Point(48, 23));

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink, new Point(16, 6));

            // Type 'nowa kategoria edit' in 'Name' text box
            uINameEdit.Text = this.editCategoryParams.UINameEditText;

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(29, 18));
        }
        
        /// <summary>
        /// editCategoryAssert - Use 'editCategoryAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void editCategoryAssert()
        {
            #region Variable Declarations
            HtmlCell uINowakategoriaeditCell = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIItemTable2.UINowakategoriaeditCell;
            #endregion

            // Verify that the 'InnerText' property of 'nowa kategoria edit' cell equals 'nowa kategoria edit '
            Assert.AreEqual(this.editCategoryAssertExpectedValues.UINowakategoriaeditCellInnerText, uINowakategoriaeditCell.InnerText);
        }
        
        /// <summary>
        /// editNewCategory - Use 'editNewCategoryParams' to pass parameters into this method.
        /// </summary>
        public void editNewCategory()
        {
            #region Variable Declarations
            HtmlHyperlink uIKategorieHyperlink = this.UIListakategoriimojaapWindow.UIHomePagemojaaplikacjDocument.UIKategorieHyperlink;
            HtmlDiv uIListakategoriiCreatePane = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIListakategoriiCreatePane;
            HtmlHyperlink uICreateNewHyperlink = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UICreateNewHyperlink;
            HtmlDiv uICategoryNamePane = this.UIListakategoriimojaapWindow.UICreatemojaaplikacjapDocument.UICategoryNamePane;
            HtmlEdit uINameEdit = this.UIListakategoriimojaapWindow.UICreatemojaaplikacjapDocument.UINameEdit;
            HtmlInputButton uICreateButton = this.UIListakategoriimojaapWindow.UICreatemojaaplikacjapDocument.UICreateButton;
            HtmlHyperlink uIEditHyperlink1 = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIEditHyperlink1;
            HtmlEdit uINameEdit1 = this.UIListakategoriimojaapWindow.UIEditmojaaplikacjaplaDocument1.UINameEdit;
            HtmlInputButton uISaveButton = this.UIListakategoriimojaapWindow.UIEditmojaaplikacjaplaDocument1.UISaveButton;
            #endregion

            // Click 'Kategorie' link
            Mouse.Click(uIKategorieHyperlink, new Point(43, 22));

            // Click 'Lista kategorii: Create New Na' pane
            Mouse.Click(uIListakategoriiCreatePane, new Point(64, 81));

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(50, 8));

            // Click 'Category Name' pane
            Mouse.Click(uICategoryNamePane, new Point(262, 104));

            // Type 'najnowsza kategoria' in 'Name' text box
            uINameEdit.Text = this.editNewCategoryParams.UINameEditText;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(16, 24));

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink1, new Point(13, 7));

            // Type 'najnowsza kategoria edited' in 'Name' text box
            uINameEdit1.Text = this.editNewCategoryParams.UINameEditText1;

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(21, 22));
        }
        
        /// <summary>
        /// editNewCategoryAssert - Use 'editNewCategoryAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void editNewCategoryAssert()
        {
            #region Variable Declarations
            HtmlCell uINajnowszakategoriaedCell = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIItemTable.UINajnowszakategoriaedCell;
            #endregion

            // Verify that the 'InnerText' property of 'najnowsza kategoria edited' cell equals 'najnowsza kategoria edited '
            Assert.AreEqual(this.editNewCategoryAssertExpectedValues.UINajnowszakategoriaedCellInnerText, uINajnowszakategoriaedCell.InnerText);
        }
        
        /// <summary>
        /// deleteCategory
        /// </summary>
        public void deleteCategory()
        {
            #region Variable Declarations
            HtmlHyperlink uIKategorieHyperlink = this.UIListakategoriimojaapWindow.UIHomePagemojaaplikacjDocument.UIKategorieHyperlink;
            HtmlCell uINajnowszakategoriaCell = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIItemTable3.UINajnowszakategoriaCell;
            HtmlHyperlink uIDeleteHyperlink = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIDeleteHyperlink;
            HtmlInputButton uIDeleteButton = this.UIListakategoriimojaapWindow.UIDeletemojaaplikacjapDocument.UIDeleteButton;
            HtmlDiv uIListakategoriiCreatePane = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIListakategoriiCreatePane;
            #endregion

            // Click 'Kategorie' link
            Mouse.Click(uIKategorieHyperlink, new Point(44, 23));

            // Move 'najnowsza kategoria' cell
            Mouse.StartDragging(uINajnowszakategoriaCell, new Point(16, 19));
            Mouse.StopDragging(uINajnowszakategoriaCell, 126, -6);

            // Click 'Delete' link
            Mouse.Click(uIDeleteHyperlink, new Point(26, 13));

            // Click 'Delete' button
            Mouse.Click(uIDeleteButton, new Point(37, 18));

            // Move 'Lista kategorii: Create New Na' pane
            Mouse.StartDragging(uIListakategoriiCreatePane, new Point(30, 503));
            Mouse.StopDragging(uIListakategoriiCreatePane, 125, 1);
        }
        
        /// <summary>
        /// deleteCategoryAssert - Use 'deleteCategoryAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void deleteCategoryAssert()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UICreateNewHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Create New' link equals 'Create New'
            Assert.AreEqual(this.deleteCategoryAssertExpectedValues.UICreateNewHyperlinkInnerText, uICreateNewHyperlink.InnerText);
        }
        
        /// <summary>
        /// RegisterNewUser - Use 'RegisterNewUserParams' to pass parameters into this method.
        /// </summary>
        public void RegisterNewUser()
        {
            #region Variable Declarations
            HtmlHyperlink uIZarejestrujHyperlink = this.UIListakategoriimojaapWindow.UIListakategoriimojaapDocument.UIZarejestrujHyperlink;
            HtmlEdit uIAdresemailEdit = this.UIListakategoriimojaapWindow.UIZarejestrujmojaaplikDocument.UIAdresemailEdit;
            HtmlEdit uIHasłoEdit = this.UIListakategoriimojaapWindow.UIZarejestrujmojaaplikDocument.UIHasłoEdit;
            HtmlEdit uIPotwierdźhasłoEdit = this.UIListakategoriimojaapWindow.UIZarejestrujmojaaplikDocument.UIPotwierdźhasłoEdit;
            HtmlInputButton uIZarejestrujButton = this.UIListakategoriimojaapWindow.UIZarejestrujmojaaplikDocument.UIZarejestrujButton;
            HtmlHyperlink uIWitajusermailcomHyperlink = this.UIListakategoriimojaapWindow.UIHomePagemojaaplikacjDocument.UILogoutFormCustom.UIWitajusermailcomHyperlink;
            #endregion

            // Click 'Zarejestruj' link
            Mouse.Click(uIZarejestrujHyperlink, new Point(22, 14));

            // Type 'user@mail.com' in 'Adres e-mail' text box
            uIAdresemailEdit.Text = this.RegisterNewUserParams.UIAdresemailEditText;

            // Type '{Tab}' in 'Adres e-mail' text box
            Keyboard.SendKeys(uIAdresemailEdit, this.RegisterNewUserParams.UIAdresemailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Hasło' text box
            uIHasłoEdit.Password = this.RegisterNewUserParams.UIHasłoEditPassword;

            // Type '{Tab}' in 'Hasło' text box
            Keyboard.SendKeys(uIHasłoEdit, this.RegisterNewUserParams.UIHasłoEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Potwierdź hasło' text box
            uIPotwierdźhasłoEdit.Password = this.RegisterNewUserParams.UIPotwierdźhasłoEditPassword;

            // Click 'Zarejestruj' button
            Mouse.Click(uIZarejestrujButton, new Point(73, 10));

            // Move 'Witaj, user@mail.com!' link
            Mouse.StartDragging(uIWitajusermailcomHyperlink, new Point(58, 22));
            Mouse.StopDragging(uIWitajusermailcomHyperlink, 47, 4);
        }
        
        /// <summary>
        /// RegisterNewUserAssert - Use 'RegisterNewUserAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void RegisterNewUserAssert()
        {
            #region Variable Declarations
            HtmlHyperlink uIWitajusermailcomHyperlink = this.UIListakategoriimojaapWindow.UIHomePagemojaaplikacjDocument.UILogoutFormCustom.UIWitajusermailcomHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Witaj, user@mail.com!' link equals 'Witaj, user@mail.com!'
            Assert.AreEqual(this.RegisterNewUserAssertExpectedValues.UIWitajusermailcomHyperlinkInnerText, uIWitajusermailcomHyperlink.InnerText);

            // Verify that the 'InnerText' property of 'Witaj, user@mail.com!' link contains 'user@mail.com'
            StringAssert.Contains(uIWitajusermailcomHyperlink.InnerText, this.RegisterNewUserAssertExpectedValues.UIWitajusermailcomHyperlinkInnerText1);
        }
        
        /// <summary>
        /// loginTest - Use 'loginTestParams' to pass parameters into this method.
        /// </summary>
        public void loginTest()
        {
            #region Variable Declarations
            HtmlHyperlink uIWylogujHyperlink = this.UIListakategoriimojaapWindow.UIHomePagemojaaplikacjDocument.UILogoutFormCustom.UIWylogujHyperlink;
            HtmlHyperlink uIZalogujHyperlink = this.UIListakategoriimojaapWindow.UIHomePagemojaaplikacjDocument.UIZalogujHyperlink;
            HtmlEdit uIAdresemailEdit = this.UIListakategoriimojaapWindow.UIZalogujmojaaplikacjaDocument.UIAdresemailEdit;
            HtmlEdit uIHasłoEdit = this.UIListakategoriimojaapWindow.UIZalogujmojaaplikacjaDocument.UIHasłoEdit;
            HtmlInputButton uIZalogujButton = this.UIListakategoriimojaapWindow.UIZalogujmojaaplikacjaDocument.UILoginFormCustom.UIZalogujButton;
            #endregion

            // Click 'Wyloguj' link
            Mouse.Click(uIWylogujHyperlink, new Point(31, 25));

            // Click 'Zaloguj' link
            Mouse.Click(uIZalogujHyperlink, new Point(44, 24));

            // Type 'user@mail.com' in 'Adres e-mail' text box
            uIAdresemailEdit.Text = this.loginTestParams.UIAdresemailEditText;

            // Type '{Tab}' in 'Adres e-mail' text box
            Keyboard.SendKeys(uIAdresemailEdit, this.loginTestParams.UIAdresemailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Hasło' text box
            uIHasłoEdit.Password = this.loginTestParams.UIHasłoEditPassword;

            // Click 'Zaloguj' button
            Mouse.Click(uIZalogujButton, new Point(50, 12));
        }
        
        /// <summary>
        /// loginTestAssert - Use 'loginTestAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void loginTestAssert()
        {
            #region Variable Declarations
            HtmlHyperlink uIWitajusermailcomHyperlink = this.UIListakategoriimojaapWindow.UIHomePagemojaaplikacjDocument.UILogoutFormCustom.UIWitajusermailcomHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Witaj, user@mail.com!' link contains 'user@mail.com'
            StringAssert.Contains(uIWitajusermailcomHyperlink.InnerText, this.loginTestAssertExpectedValues.UIWitajusermailcomHyperlinkInnerText);
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public virtual AssertMethod2ExpectedValues AssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod2ExpectedValues == null))
                {
                    this.mAssertMethod2ExpectedValues = new AssertMethod2ExpectedValues();
                }
                return this.mAssertMethod2ExpectedValues;
            }
        }
        
        public virtual editCategoryParams editCategoryParams
        {
            get
            {
                if ((this.meditCategoryParams == null))
                {
                    this.meditCategoryParams = new editCategoryParams();
                }
                return this.meditCategoryParams;
            }
        }
        
        public virtual editCategoryAssertExpectedValues editCategoryAssertExpectedValues
        {
            get
            {
                if ((this.meditCategoryAssertExpectedValues == null))
                {
                    this.meditCategoryAssertExpectedValues = new editCategoryAssertExpectedValues();
                }
                return this.meditCategoryAssertExpectedValues;
            }
        }
        
        public virtual editNewCategoryParams editNewCategoryParams
        {
            get
            {
                if ((this.meditNewCategoryParams == null))
                {
                    this.meditNewCategoryParams = new editNewCategoryParams();
                }
                return this.meditNewCategoryParams;
            }
        }
        
        public virtual editNewCategoryAssertExpectedValues editNewCategoryAssertExpectedValues
        {
            get
            {
                if ((this.meditNewCategoryAssertExpectedValues == null))
                {
                    this.meditNewCategoryAssertExpectedValues = new editNewCategoryAssertExpectedValues();
                }
                return this.meditNewCategoryAssertExpectedValues;
            }
        }
        
        public virtual deleteCategoryAssertExpectedValues deleteCategoryAssertExpectedValues
        {
            get
            {
                if ((this.mdeleteCategoryAssertExpectedValues == null))
                {
                    this.mdeleteCategoryAssertExpectedValues = new deleteCategoryAssertExpectedValues();
                }
                return this.mdeleteCategoryAssertExpectedValues;
            }
        }
        
        public virtual RegisterNewUserParams RegisterNewUserParams
        {
            get
            {
                if ((this.mRegisterNewUserParams == null))
                {
                    this.mRegisterNewUserParams = new RegisterNewUserParams();
                }
                return this.mRegisterNewUserParams;
            }
        }
        
        public virtual RegisterNewUserAssertExpectedValues RegisterNewUserAssertExpectedValues
        {
            get
            {
                if ((this.mRegisterNewUserAssertExpectedValues == null))
                {
                    this.mRegisterNewUserAssertExpectedValues = new RegisterNewUserAssertExpectedValues();
                }
                return this.mRegisterNewUserAssertExpectedValues;
            }
        }
        
        public virtual loginTestParams loginTestParams
        {
            get
            {
                if ((this.mloginTestParams == null))
                {
                    this.mloginTestParams = new loginTestParams();
                }
                return this.mloginTestParams;
            }
        }
        
        public virtual loginTestAssertExpectedValues loginTestAssertExpectedValues
        {
            get
            {
                if ((this.mloginTestAssertExpectedValues == null))
                {
                    this.mloginTestAssertExpectedValues = new loginTestAssertExpectedValues();
                }
                return this.mloginTestAssertExpectedValues;
            }
        }
        
        public UIHomePagemojaaplikacjWindow UIHomePagemojaaplikacjWindow
        {
            get
            {
                if ((this.mUIHomePagemojaaplikacjWindow == null))
                {
                    this.mUIHomePagemojaaplikacjWindow = new UIHomePagemojaaplikacjWindow();
                }
                return this.mUIHomePagemojaaplikacjWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIListakategoriimojaapWindow UIListakategoriimojaapWindow
        {
            get
            {
                if ((this.mUIListakategoriimojaapWindow == null))
                {
                    this.mUIListakategoriimojaapWindow = new UIListakategoriimojaapWindow();
                }
                return this.mUIListakategoriimojaapWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private AssertMethod2ExpectedValues mAssertMethod2ExpectedValues;
        
        private editCategoryParams meditCategoryParams;
        
        private editCategoryAssertExpectedValues meditCategoryAssertExpectedValues;
        
        private editNewCategoryParams meditNewCategoryParams;
        
        private editNewCategoryAssertExpectedValues meditNewCategoryAssertExpectedValues;
        
        private deleteCategoryAssertExpectedValues mdeleteCategoryAssertExpectedValues;
        
        private RegisterNewUserParams mRegisterNewUserParams;
        
        private RegisterNewUserAssertExpectedValues mRegisterNewUserAssertExpectedValues;
        
        private loginTestParams mloginTestParams;
        
        private loginTestAssertExpectedValues mloginTestAssertExpectedValues;
        
        private UIHomePagemojaaplikacjWindow mUIHomePagemojaaplikacjWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIListakategoriimojaapWindow mUIListakategoriimojaapWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'n' in 'Chrome Legacy Window' document
        /// </summary>
        public string UIChromeLegacyWindowDocumentSendKeys = "n";
        
        /// <summary>
        /// Type 'owa{Space}kategoria{Space}1' in 'Autouzupełnianie' popup menu
        /// </summary>
        public string UIAutouzupełnianieMenuSendKeys = "owa{Space}kategoria{Space}1";
        
        /// <summary>
        /// Type '2' in 'Create — moja aplikacja platformy ASP.NET - Google...' document
        /// </summary>
        public string UICreatemojaaplikacjapDocumentSendKeys = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'nowa kategoria 12' cell equals 'nowa kategoria 12 '
        /// </summary>
        public string UINowakategoria12CellInnerText = "nowa kategoria 12 ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'nowa kategoria' in 'Name' text box
        /// </summary>
        public string UINameEditText = "nowa kategoria";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'nowa kategoria' cell equals 'nowa kategoria '
        /// </summary>
        public string UINowakategoriaCellInnerText = "nowa kategoria ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'editCategory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class editCategoryParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'nowa kategoria edit' in 'Name' text box
        /// </summary>
        public string UINameEditText = "nowa kategoria edit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'editCategoryAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class editCategoryAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'nowa kategoria edit' cell equals 'nowa kategoria edit '
        /// </summary>
        public string UINowakategoriaeditCellInnerText = "nowa kategoria edit ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'editNewCategory'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class editNewCategoryParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'najnowsza kategoria' in 'Name' text box
        /// </summary>
        public string UINameEditText = "najnowsza kategoria";
        
        /// <summary>
        /// Type 'najnowsza kategoria edited' in 'Name' text box
        /// </summary>
        public string UINameEditText1 = "najnowsza kategoria edited";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'editNewCategoryAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class editNewCategoryAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'najnowsza kategoria edited' cell equals 'najnowsza kategoria edited '
        /// </summary>
        public string UINajnowszakategoriaedCellInnerText = "najnowsza kategoria edited ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'deleteCategoryAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class deleteCategoryAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Create New' link equals 'Create New'
        /// </summary>
        public string UICreateNewHyperlinkInnerText = "Create New";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RegisterNewUser'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RegisterNewUserParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'user@mail.com' in 'Adres e-mail' text box
        /// </summary>
        public string UIAdresemailEditText = "user@mail.com";
        
        /// <summary>
        /// Type '{Tab}' in 'Adres e-mail' text box
        /// </summary>
        public string UIAdresemailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Hasło' text box
        /// </summary>
        public string UIHasłoEditPassword = "sN7idxpEIQQIPwiZwQtPAkfs4hkQ29XS";
        
        /// <summary>
        /// Type '{Tab}' in 'Hasło' text box
        /// </summary>
        public string UIHasłoEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Potwierdź hasło' text box
        /// </summary>
        public string UIPotwierdźhasłoEditPassword = "sN7idxpEIQQIPwiZwQtPAkfs4hkQ29XS";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RegisterNewUserAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RegisterNewUserAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Witaj, user@mail.com!' link equals 'Witaj, user@mail.com!'
        /// </summary>
        public string UIWitajusermailcomHyperlinkInnerText = "Witaj, user@mail.com!";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Witaj, user@mail.com!' link contains 'user@mail.com'
        /// </summary>
        public string UIWitajusermailcomHyperlinkInnerText1 = "user@mail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'loginTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class loginTestParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'user@mail.com' in 'Adres e-mail' text box
        /// </summary>
        public string UIAdresemailEditText = "user@mail.com";
        
        /// <summary>
        /// Type '{Tab}' in 'Adres e-mail' text box
        /// </summary>
        public string UIAdresemailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Hasło' text box
        /// </summary>
        public string UIHasłoEditPassword = "sN7idxpEIQQIPwiZwQtPAkfs4hkQ29XS";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'loginTestAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class loginTestAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Witaj, user@mail.com!' link contains 'user@mail.com'
        /// </summary>
        public string UIWitajusermailcomHyperlinkInnerText = "user@mail.com";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePagemojaaplikacjWindow : WinWindow
    {
        
        public UIHomePagemojaaplikacjWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Home Page — moja aplikacja platformy ASP.NET - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("Home Page — moja aplikacja platformy ASP.NET - Google Chrome");
            this.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET - Google Chrome");
            this.WindowTitles.Add("Create — moja aplikacja platformy ASP.NET - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinPane UIHomePagemojaaplikacjPane
        {
            get
            {
                if ((this.mUIHomePagemojaaplikacjPane == null))
                {
                    this.mUIHomePagemojaaplikacjPane = new WinPane(this);
                    #region Search Criteria
                    this.mUIHomePagemojaaplikacjPane.SearchProperties[WinControl.PropertyNames.Name] = "Home Page — moja aplikacja platformy ASP.NET - Google Chrome";
                    this.mUIHomePagemojaaplikacjPane.WindowTitles.Add("Home Page — moja aplikacja platformy ASP.NET - Google Chrome");
                    #endregion
                }
                return this.mUIHomePagemojaaplikacjPane;
            }
        }
        
        public WinPane UIListakategoriimojaapPane
        {
            get
            {
                if ((this.mUIListakategoriimojaapPane == null))
                {
                    this.mUIListakategoriimojaapPane = new WinPane(this);
                    #region Search Criteria
                    this.mUIListakategoriimojaapPane.SearchProperties[WinControl.PropertyNames.Name] = "Lista kategorii — moja aplikacja platformy ASP.NET - Google Chrome";
                    this.mUIListakategoriimojaapPane.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET - Google Chrome");
                    #endregion
                }
                return this.mUIListakategoriimojaapPane;
            }
        }
        
        public WinPane UICreatemojaaplikacjapPane
        {
            get
            {
                if ((this.mUICreatemojaaplikacjapPane == null))
                {
                    this.mUICreatemojaaplikacjapPane = new WinPane(this);
                    #region Search Criteria
                    this.mUICreatemojaaplikacjapPane.SearchProperties[WinControl.PropertyNames.Name] = "Create — moja aplikacja platformy ASP.NET - Google Chrome";
                    this.mUICreatemojaaplikacjapPane.WindowTitles.Add("Create — moja aplikacja platformy ASP.NET - Google Chrome");
                    #endregion
                }
                return this.mUICreatemojaaplikacjapPane;
            }
        }
        
        public UIChromeLegacyWindowWindow UIChromeLegacyWindowWindow
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow == null))
                {
                    this.mUIChromeLegacyWindowWindow = new UIChromeLegacyWindowWindow(this);
                }
                return this.mUIChromeLegacyWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinPane mUIHomePagemojaaplikacjPane;
        
        private WinPane mUIListakategoriimojaapPane;
        
        private WinPane mUICreatemojaaplikacjapPane;
        
        private UIChromeLegacyWindowWindow mUIChromeLegacyWindowWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIChromeLegacyWindowWindow : WinWindow
    {
        
        public UIChromeLegacyWindowWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1675334304";
            this.WindowTitles.Add("Create — moja aplikacja platformy ASP.NET - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIChromeLegacyWindowDocument.WindowTitles.Add("Create — moja aplikacja platformy ASP.NET - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        
        public WinControl UICreatemojaaplikacjapDocument
        {
            get
            {
                if ((this.mUICreatemojaaplikacjapDocument == null))
                {
                    this.mUICreatemojaaplikacjapDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUICreatemojaaplikacjapDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUICreatemojaaplikacjapDocument.WindowTitles.Add("Create — moja aplikacja platformy ASP.NET - Google Chrome");
                    #endregion
                }
                return this.mUICreatemojaaplikacjapDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIChromeLegacyWindowDocument;
        
        private WinControl mUICreatemojaaplikacjapDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            #endregion
        }
        
        #region Properties
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinMenu UIAutouzupełnianieMenu
        {
            get
            {
                if ((this.mUIAutouzupełnianieMenu == null))
                {
                    this.mUIAutouzupełnianieMenu = new WinMenu(this);
                    #region Search Criteria
                    this.mUIAutouzupełnianieMenu.SearchProperties[WinMenu.PropertyNames.Name] = "Autouzupełnianie";
                    #endregion
                }
                return this.mUIAutouzupełnianieMenu;
            }
        }
        #endregion
        
        #region Fields
        private WinMenu mUIAutouzupełnianieMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIListakategoriimojaapWindow : BrowserWindow
    {
        
        public UIListakategoriimojaapWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Lista kategorii — moja aplikacja platformy ASP.NET";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
            this.WindowTitles.Add("Create — moja aplikacja platformy ASP.NET");
            this.WindowTitles.Add("Home Page — moja aplikacja platformy ASP.NET");
            this.WindowTitles.Add("Edit — moja aplikacja platformy ASP.NET");
            this.WindowTitles.Add("Delete — moja aplikacja platformy ASP.NET");
            this.WindowTitles.Add("Zarejestruj — moja aplikacja platformy ASP.NET");
            this.WindowTitles.Add("Zaloguj — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIListakategoriimojaapDocument UIListakategoriimojaapDocument
        {
            get
            {
                if ((this.mUIListakategoriimojaapDocument == null))
                {
                    this.mUIListakategoriimojaapDocument = new UIListakategoriimojaapDocument(this);
                }
                return this.mUIListakategoriimojaapDocument;
            }
        }
        
        public UICreatemojaaplikacjapDocument UICreatemojaaplikacjapDocument
        {
            get
            {
                if ((this.mUICreatemojaaplikacjapDocument == null))
                {
                    this.mUICreatemojaaplikacjapDocument = new UICreatemojaaplikacjapDocument(this);
                }
                return this.mUICreatemojaaplikacjapDocument;
            }
        }
        
        public UIHomePagemojaaplikacjDocument UIHomePagemojaaplikacjDocument
        {
            get
            {
                if ((this.mUIHomePagemojaaplikacjDocument == null))
                {
                    this.mUIHomePagemojaaplikacjDocument = new UIHomePagemojaaplikacjDocument(this);
                }
                return this.mUIHomePagemojaaplikacjDocument;
            }
        }
        
        public UIEditmojaaplikacjaplaDocument UIEditmojaaplikacjaplaDocument
        {
            get
            {
                if ((this.mUIEditmojaaplikacjaplaDocument == null))
                {
                    this.mUIEditmojaaplikacjaplaDocument = new UIEditmojaaplikacjaplaDocument(this);
                }
                return this.mUIEditmojaaplikacjaplaDocument;
            }
        }
        
        public UIEditmojaaplikacjaplaDocument1 UIEditmojaaplikacjaplaDocument1
        {
            get
            {
                if ((this.mUIEditmojaaplikacjaplaDocument1 == null))
                {
                    this.mUIEditmojaaplikacjaplaDocument1 = new UIEditmojaaplikacjaplaDocument1(this);
                }
                return this.mUIEditmojaaplikacjaplaDocument1;
            }
        }
        
        public UIDeletemojaaplikacjapDocument UIDeletemojaaplikacjapDocument
        {
            get
            {
                if ((this.mUIDeletemojaaplikacjapDocument == null))
                {
                    this.mUIDeletemojaaplikacjapDocument = new UIDeletemojaaplikacjapDocument(this);
                }
                return this.mUIDeletemojaaplikacjapDocument;
            }
        }
        
        public UIZarejestrujmojaaplikDocument UIZarejestrujmojaaplikDocument
        {
            get
            {
                if ((this.mUIZarejestrujmojaaplikDocument == null))
                {
                    this.mUIZarejestrujmojaaplikDocument = new UIZarejestrujmojaaplikDocument(this);
                }
                return this.mUIZarejestrujmojaaplikDocument;
            }
        }
        
        public UIZalogujmojaaplikacjaDocument UIZalogujmojaaplikacjaDocument
        {
            get
            {
                if ((this.mUIZalogujmojaaplikacjaDocument == null))
                {
                    this.mUIZalogujmojaaplikacjaDocument = new UIZalogujmojaaplikacjaDocument(this);
                }
                return this.mUIZalogujmojaaplikacjaDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIListakategoriimojaapDocument mUIListakategoriimojaapDocument;
        
        private UICreatemojaaplikacjapDocument mUICreatemojaaplikacjapDocument;
        
        private UIHomePagemojaaplikacjDocument mUIHomePagemojaaplikacjDocument;
        
        private UIEditmojaaplikacjaplaDocument mUIEditmojaaplikacjaplaDocument;
        
        private UIEditmojaaplikacjaplaDocument1 mUIEditmojaaplikacjaplaDocument1;
        
        private UIDeletemojaaplikacjapDocument mUIDeletemojaaplikacjapDocument;
        
        private UIZarejestrujmojaaplikDocument mUIZarejestrujmojaaplikDocument;
        
        private UIZalogujmojaaplikacjaDocument mUIZalogujmojaaplikacjaDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIListakategoriimojaapDocument : HtmlDocument
    {
        
        public UIListakategoriimojaapDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Lista kategorii — moja aplikacja platformy ASP.NET";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Categories";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:57930/Categories";
            this.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlHyperlink UIKategorieHyperlink
        {
            get
            {
                if ((this.mUIKategorieHyperlink == null))
                {
                    this.mUIKategorieHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIKategorieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIKategorieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIKategorieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIKategorieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Kategorie";
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Categories";
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:57930/Categories";
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Categories\"";
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIKategorieHyperlink.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIKategorieHyperlink;
            }
        }
        
        public HtmlHyperlink UICreateNewHyperlink
        {
            get
            {
                if ((this.mUICreateNewHyperlink == null))
                {
                    this.mUICreateNewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Categories/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:57930/Categories/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Categories/Create\"";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "7";
                    this.mUICreateNewHyperlink.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUICreateNewHyperlink;
            }
        }
        
        public UIItemTable1 UIItemTable1
        {
            get
            {
                if ((this.mUIItemTable1 == null))
                {
                    this.mUIItemTable1 = new UIItemTable1(this);
                }
                return this.mUIItemTable1;
            }
        }
        
        public HtmlHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Edit";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Categories/Edit/10";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:57930/Categories/Edit/10";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Categories/Edit/10\"";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "20";
                    this.mUIEditHyperlink.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        
        public UIItemTable2 UIItemTable2
        {
            get
            {
                if ((this.mUIItemTable2 == null))
                {
                    this.mUIItemTable2 = new UIItemTable2(this);
                }
                return this.mUIItemTable2;
            }
        }
        
        public HtmlDiv UIListakategoriiCreatePane
        {
            get
            {
                if ((this.mUIListakategoriiCreatePane == null))
                {
                    this.mUIListakategoriiCreatePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIListakategoriiCreatePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIListakategoriiCreatePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIListakategoriiCreatePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Lista kategorii: \r\n\r\nCreate New \r\n\r\n\r\nNa";
                    this.mUIListakategoriiCreatePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIListakategoriiCreatePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIListakategoriiCreatePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIListakategoriiCreatePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIListakategoriiCreatePane.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIListakategoriiCreatePane;
            }
        }
        
        public HtmlHyperlink UIEditHyperlink1
        {
            get
            {
                if ((this.mUIEditHyperlink1 == null))
                {
                    this.mUIEditHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIEditHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEditHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEditHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Edit";
                    this.mUIEditHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Categories/Edit/13";
                    this.mUIEditHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEditHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:57930/Categories/Edit/13";
                    this.mUIEditHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEditHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Categories/Edit/13\"";
                    this.mUIEditHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "32";
                    this.mUIEditHyperlink1.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIEditHyperlink1;
            }
        }
        
        public UIItemTable3 UIItemTable3
        {
            get
            {
                if ((this.mUIItemTable3 == null))
                {
                    this.mUIItemTable3 = new UIItemTable3(this);
                }
                return this.mUIItemTable3;
            }
        }
        
        public HtmlHyperlink UIDeleteHyperlink
        {
            get
            {
                if ((this.mUIDeleteHyperlink == null))
                {
                    this.mUIDeleteHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delete";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Categories/Delete/14";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:57930/Categories/Delete/14";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Categories/Delete/14\"";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "38";
                    this.mUIDeleteHyperlink.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIDeleteHyperlink;
            }
        }
        
        public HtmlHyperlink UIZarejestrujHyperlink
        {
            get
            {
                if ((this.mUIZarejestrujHyperlink == null))
                {
                    this.mUIZarejestrujHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIZarejestrujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "registerLink";
                    this.mUIZarejestrujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIZarejestrujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIZarejestrujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Zarejestruj";
                    this.mUIZarejestrujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Register";
                    this.mUIZarejestrujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIZarejestrujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:57930/Account/Register";
                    this.mUIZarejestrujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIZarejestrujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"registerLink\" href=\"/Account/Registe";
                    this.mUIZarejestrujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIZarejestrujHyperlink.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIZarejestrujHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable mUIItemTable;
        
        private HtmlHyperlink mUIKategorieHyperlink;
        
        private HtmlHyperlink mUICreateNewHyperlink;
        
        private UIItemTable1 mUIItemTable1;
        
        private HtmlHyperlink mUIEditHyperlink;
        
        private UIItemTable2 mUIItemTable2;
        
        private HtmlDiv mUIListakategoriiCreatePane;
        
        private HtmlHyperlink mUIEditHyperlink1;
        
        private UIItemTable3 mUIItemTable3;
        
        private HtmlHyperlink mUIDeleteHyperlink;
        
        private HtmlHyperlink mUIZarejestrujHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name \r\n\r\n\r\nkategoria1 Edit | Details | D";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "8";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlCell UINowakategoria12Cell
        {
            get
            {
                if ((this.mUINowakategoria12Cell == null))
                {
                    this.mUINowakategoria12Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUINowakategoria12Cell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUINowakategoria12Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUINowakategoria12Cell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUINowakategoria12Cell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "nowa kategoria 12 ";
                    this.mUINowakategoria12Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUINowakategoria12Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "7";
                    this.mUINowakategoria12Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUINowakategoria12Cell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUINowakategoria12Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "13";
                    this.mUINowakategoria12Cell.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUINowakategoria12Cell;
            }
        }
        
        public HtmlCell UINajnowszakategoriaedCell
        {
            get
            {
                if ((this.mUINajnowszakategoriaedCell == null))
                {
                    this.mUINajnowszakategoriaedCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUINajnowszakategoriaedCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUINajnowszakategoriaedCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUINajnowszakategoriaedCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUINajnowszakategoriaedCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "najnowsza kategoria edited ";
                    this.mUINajnowszakategoriaedCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUINajnowszakategoriaedCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "7";
                    this.mUINajnowszakategoriaedCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUINajnowszakategoriaedCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUINajnowszakategoriaedCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "13";
                    this.mUINajnowszakategoriaedCell.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUINajnowszakategoriaedCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUINowakategoria12Cell;
        
        private HtmlCell mUINajnowszakategoriaedCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable1 : HtmlTable
    {
        
        public UIItemTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name \r\n\r\n\r\nkategoria1 Edit | Details | D";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "4";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlCell UINowakategoriaCell
        {
            get
            {
                if ((this.mUINowakategoriaCell == null))
                {
                    this.mUINowakategoriaCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUINowakategoriaCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUINowakategoriaCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUINowakategoriaCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUINowakategoriaCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "nowa kategoria ";
                    this.mUINowakategoriaCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUINowakategoriaCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
                    this.mUINowakategoriaCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUINowakategoriaCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUINowakategoriaCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "5";
                    this.mUINowakategoriaCell.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUINowakategoriaCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUINowakategoriaCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable2 : HtmlTable
    {
        
        public UIItemTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name \r\n\r\n\r\nkategoria1 Edit | Details | D";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "7";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlCell UINowakategoriaeditCell
        {
            get
            {
                if ((this.mUINowakategoriaeditCell == null))
                {
                    this.mUINowakategoriaeditCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUINowakategoriaeditCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUINowakategoriaeditCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUINowakategoriaeditCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUINowakategoriaeditCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "nowa kategoria edit ";
                    this.mUINowakategoriaeditCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUINowakategoriaeditCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "4";
                    this.mUINowakategoriaeditCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUINowakategoriaeditCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUINowakategoriaeditCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "7";
                    this.mUINowakategoriaeditCell.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUINowakategoriaeditCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUINowakategoriaeditCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable3 : HtmlTable
    {
        
        public UIItemTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name \r\n\r\n\r\nkategoria1 Edit | Details | D";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "9";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlCell UINajnowszakategoriaCell
        {
            get
            {
                if ((this.mUINajnowszakategoriaCell == null))
                {
                    this.mUINajnowszakategoriaCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUINajnowszakategoriaCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUINajnowszakategoriaCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUINajnowszakategoriaCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUINajnowszakategoriaCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "najnowsza kategoria ";
                    this.mUINajnowszakategoriaCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUINajnowszakategoriaCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "8";
                    this.mUINajnowszakategoriaCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUINajnowszakategoriaCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUINajnowszakategoriaCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "15";
                    this.mUINajnowszakategoriaCell.WindowTitles.Add("Lista kategorii — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUINajnowszakategoriaCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUINajnowszakategoriaCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreatemojaaplikacjapDocument : HtmlDocument
    {
        
        public UICreatemojaaplikacjapDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create — moja aplikacja platformy ASP.NET";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Categories/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:57930/Categories/Create";
            this.WindowTitles.Add("Create — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control text-box";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINameEdit.WindowTitles.Add("Create — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUICreateButton.WindowTitles.Add("Create — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        
        public HtmlDiv UICategoryNamePane
        {
            get
            {
                if ((this.mUICategoryNamePane == null))
                {
                    this.mUICategoryNamePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICategoryNamePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICategoryNamePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICategoryNamePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Category\r\n\r\n\r\nName \r\n \r\n\r\n ";
                    this.mUICategoryNamePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICategoryNamePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "form-horizontal";
                    this.mUICategoryNamePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"form-horizontal\"";
                    this.mUICategoryNamePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
                    this.mUICategoryNamePane.WindowTitles.Add("Create — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUICategoryNamePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlInputButton mUICreateButton;
        
        private HtmlDiv mUICategoryNamePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePagemojaaplikacjDocument : HtmlDocument
    {
        
        public UIHomePagemojaaplikacjDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page — moja aplikacja platformy ASP.NET";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:57930/";
            this.WindowTitles.Add("Home Page — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIKategorieHyperlink
        {
            get
            {
                if ((this.mUIKategorieHyperlink == null))
                {
                    this.mUIKategorieHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIKategorieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIKategorieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIKategorieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIKategorieHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Kategorie";
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Categories";
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:57930/Categories";
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Categories\"";
                    this.mUIKategorieHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIKategorieHyperlink.WindowTitles.Add("Home Page — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIKategorieHyperlink;
            }
        }
        
        public UILogoutFormCustom UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        
        public HtmlHyperlink UIZalogujHyperlink
        {
            get
            {
                if ((this.mUIZalogujHyperlink == null))
                {
                    this.mUIZalogujHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIZalogujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "loginLink";
                    this.mUIZalogujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIZalogujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIZalogujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Zaloguj";
                    this.mUIZalogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Login";
                    this.mUIZalogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIZalogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:57930/Account/Login";
                    this.mUIZalogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIZalogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"loginLink\" href=\"/Account/Login\"";
                    this.mUIZalogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIZalogujHyperlink.WindowTitles.Add("Home Page — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIZalogujHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIKategorieHyperlink;
        
        private UILogoutFormCustom mUILogoutFormCustom;
        
        private HtmlHyperlink mUIZalogujHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILogoutFormCustom : HtmlCustom
    {
        
        public UILogoutFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "navbar-right";
            this.FilterProperties["ControlDefinition"] = "class=\"navbar-right\" id=\"logoutForm\" act";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Home Page — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIWitajusermailcomHyperlink
        {
            get
            {
                if ((this.mUIWitajusermailcomHyperlink == null))
                {
                    this.mUIWitajusermailcomHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIWitajusermailcomHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIWitajusermailcomHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIWitajusermailcomHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIWitajusermailcomHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Witaj, user@mail.com!";
                    this.mUIWitajusermailcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Manage";
                    this.mUIWitajusermailcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Manage";
                    this.mUIWitajusermailcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:57930/Manage";
                    this.mUIWitajusermailcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIWitajusermailcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "title=\"Manage\" href=\"/Manage\"";
                    this.mUIWitajusermailcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIWitajusermailcomHyperlink.WindowTitles.Add("Home Page — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIWitajusermailcomHyperlink;
            }
        }
        
        public HtmlHyperlink UIWylogujHyperlink
        {
            get
            {
                if ((this.mUIWylogujHyperlink == null))
                {
                    this.mUIWylogujHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIWylogujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIWylogujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIWylogujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIWylogujHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Wyloguj";
                    this.mUIWylogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "document.getElementById(\'logoutForm\').submit()";
                    this.mUIWylogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIWylogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:document.getElementById(\'logoutForm\').submit()";
                    this.mUIWylogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIWylogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:document.getElementById";
                    this.mUIWylogujHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIWylogujHyperlink.WindowTitles.Add("Home Page — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIWylogujHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIWitajusermailcomHyperlink;
        
        private HtmlHyperlink mUIWylogujHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEditmojaaplikacjaplaDocument : HtmlDocument
    {
        
        public UIEditmojaaplikacjaplaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Edit — moja aplikacja platformy ASP.NET";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Categories/Edit/10";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:57930/Categories/Edit/10";
            this.WindowTitles.Add("Edit — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control text-box";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUINameEdit.WindowTitles.Add("Edit — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUISaveButton.WindowTitles.Add("Edit — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlInputButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEditmojaaplikacjaplaDocument1 : HtmlDocument
    {
        
        public UIEditmojaaplikacjaplaDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Edit — moja aplikacja platformy ASP.NET";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Categories/Edit/13";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:57930/Categories/Edit/13";
            this.WindowTitles.Add("Edit — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control text-box";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUINameEdit.WindowTitles.Add("Edit — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUISaveButton.WindowTitles.Add("Edit — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlInputButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeletemojaaplikacjapDocument : HtmlDocument
    {
        
        public UIDeletemojaaplikacjapDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Delete — moja aplikacja platformy ASP.NET";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Categories/Delete/14";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:57930/Categories/Delete/14";
            this.WindowTitles.Add("Delete — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Delete";
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteButton.WindowTitles.Add("Delete — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIZarejestrujmojaaplikDocument : HtmlDocument
    {
        
        public UIZarejestrujmojaaplikDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Zarejestruj — moja aplikacja platformy ASP.NET";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Register";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:57930/Account/Register";
            this.WindowTitles.Add("Zarejestruj — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIAdresemailEdit
        {
            get
            {
                if ((this.mUIAdresemailEdit == null))
                {
                    this.mUIAdresemailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAdresemailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIAdresemailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Adres e-mail";
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIAdresemailEdit.WindowTitles.Add("Zarejestruj — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIAdresemailEdit;
            }
        }
        
        public HtmlEdit UIHasłoEdit
        {
            get
            {
                if ((this.mUIHasłoEdit == null))
                {
                    this.mUIHasłoEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIHasłoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIHasłoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Hasło";
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIHasłoEdit.WindowTitles.Add("Zarejestruj — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIHasłoEdit;
            }
        }
        
        public HtmlEdit UIPotwierdźhasłoEdit
        {
            get
            {
                if ((this.mUIPotwierdźhasłoEdit == null))
                {
                    this.mUIPotwierdźhasłoEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPotwierdźhasłoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ConfirmPassword";
                    this.mUIPotwierdźhasłoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ConfirmPassword";
                    this.mUIPotwierdźhasłoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Potwierdź hasło";
                    this.mUIPotwierdźhasłoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPotwierdźhasłoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPotwierdźhasłoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPotwierdźhasłoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ConfirmPassword\" class=\"form-contr";
                    this.mUIPotwierdźhasłoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIPotwierdźhasłoEdit.WindowTitles.Add("Zarejestruj — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIPotwierdźhasłoEdit;
            }
        }
        
        public HtmlInputButton UIZarejestrujButton
        {
            get
            {
                if ((this.mUIZarejestrujButton == null))
                {
                    this.mUIZarejestrujButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIZarejestrujButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIZarejestrujButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIZarejestrujButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Zarejestruj";
                    this.mUIZarejestrujButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIZarejestrujButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIZarejestrujButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIZarejestrujButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIZarejestrujButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    this.mUIZarejestrujButton.WindowTitles.Add("Zarejestruj — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIZarejestrujButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIAdresemailEdit;
        
        private HtmlEdit mUIHasłoEdit;
        
        private HtmlEdit mUIPotwierdźhasłoEdit;
        
        private HtmlInputButton mUIZarejestrujButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIZalogujmojaaplikacjaDocument : HtmlDocument
    {
        
        public UIZalogujmojaaplikacjaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Zaloguj — moja aplikacja platformy ASP.NET";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:57930/Account/Login";
            this.WindowTitles.Add("Zaloguj — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIAdresemailEdit
        {
            get
            {
                if ((this.mUIAdresemailEdit == null))
                {
                    this.mUIAdresemailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAdresemailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIAdresemailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Adres e-mail";
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIAdresemailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIAdresemailEdit.WindowTitles.Add("Zaloguj — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIAdresemailEdit;
            }
        }
        
        public HtmlEdit UIHasłoEdit
        {
            get
            {
                if ((this.mUIHasłoEdit == null))
                {
                    this.mUIHasłoEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIHasłoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIHasłoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Hasło";
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIHasłoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIHasłoEdit.WindowTitles.Add("Zaloguj — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIHasłoEdit;
            }
        }
        
        public UILoginFormCustom UILoginFormCustom
        {
            get
            {
                if ((this.mUILoginFormCustom == null))
                {
                    this.mUILoginFormCustom = new UILoginFormCustom(this);
                }
                return this.mUILoginFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIAdresemailEdit;
        
        private HtmlEdit mUIHasłoEdit;
        
        private UILoginFormCustom mUILoginFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILoginFormCustom : HtmlCustom
    {
        
        public UILoginFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "SECTION";
            this.SearchProperties["Id"] = "loginForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"loginForm\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Zaloguj — moja aplikacja platformy ASP.NET");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIZalogujButton
        {
            get
            {
                if ((this.mUIZalogujButton == null))
                {
                    this.mUIZalogujButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIZalogujButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIZalogujButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIZalogujButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Zaloguj";
                    this.mUIZalogujButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIZalogujButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIZalogujButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIZalogujButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIZalogujButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUIZalogujButton.WindowTitles.Add("Zaloguj — moja aplikacja platformy ASP.NET");
                    #endregion
                }
                return this.mUIZalogujButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIZalogujButton;
        #endregion
    }
}
